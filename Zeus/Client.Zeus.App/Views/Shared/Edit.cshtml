@using Client.Zeus.Domain.Base;
@{
    Layout = "~/Views/Shared/_Layout.cshtml";

    var modelo = new AutomaticModel(true);
    if (ViewBag.Modelo is AutomaticModel)
    {
        modelo = ViewBag.Modelo as AutomaticModel;
    }

    var idDiv = 0;
}

@if (modelo.NotLoad)
{
    <div class="row"> View não carregada! </div>
}
else
{
    <div class="row">
        <div class="col-lg-12">
            <h1 class="page-header">
                @(modelo.Title ?? @ViewContext.RouteData.Values["controller"] as string) - Modify
            </h1>

            <div class="panel panel-default">
                <div class="panel-heading">
                    Campos Principais
                </div>

                <div class="panel-body">
                    @using (Html.BeginForm("Edit", @ViewContext.RouteData.Values["controller"] as string, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        foreach (var campo in modelo.HiddenField)
                        {
                            if (!string.IsNullOrWhiteSpace(campo.FixedValue))
                            {
                                @Html.Hidden(campo.Name, campo.FixedValue)
                            }
                            else
                            {
                                var valor = ViewData[campo.Name];
                                valor = valor ?? "";
                                @Html.Hidden(campo.Name, valor)
                            }
                        }

                        <div class="clearfix">
                            <div class="form-section">
                                <div class="row" id="conteudoForm">
                                    @if (modelo.ConteudoDinamicoEditar.Count > 0)
                                    {
                                        <div class="col-xs-12 col-sm-4 col-md-4 col-lg-12 margintop10" id="divConteudoDinamicoInicio">

                                        </div>
                                    }
                                    
                                    @foreach (var campo in modelo.Fields)
                                    {
                                        var Metadata = ModelMetadata.FromStringExpression(campo.Name as string, ViewData);
                                        if (Metadata.PropertyName == null) { continue; }
                                        var NomeCampo = (Metadata.DisplayName ?? Metadata.PropertyName);
                                        var Valor = Metadata.Model;// ViewData[Metadata.PropertyName];

                                        <div class="col-xs-12 col-sm-2 col-md-4 col-lg-@campo.Width margintop10">
                                            <div class="">
                                                @Html.Label(Metadata.PropertyName, NomeCampo + (NomeCampo.EndsWith("?") ? "" : ":"), new { @class = "labelCustom" })

                                                @if (Metadata.ModelType == typeof(bool) || Metadata.ModelType == typeof(bool?))
                                                {
                                                    if (campo.Type == enumFieldType.Default)
                                                    {
                                                        @Html.DropDownList(Metadata.PropertyName, new List<System.Web.Mvc.SelectListItem> {
                                                    new System.Web.Mvc.SelectListItem { Text = "Sim", Value = "True", Selected = Valor == "True" },
                                                    new System.Web.Mvc.SelectListItem { Text = "Não", Value = "False", Selected = Valor == "False" }
                                                }, new { @class = "form-control" })
                                                    }
                                                    else if (campo.Type == enumFieldType.CustomizedParcial)
                                                    {
                                                        @Html.Partial(campo.LoadControl)
                                                    }
                                                    else if (campo.Type == enumFieldType.CustomizedHtml)
                                                    {
                                                        @Html.Raw(campo.LoadControl)
                                                    }
                                                }
                                                else if (Metadata.PropertyName.ToUpper().StartsWith("ID") && Metadata.PropertyName.ToUpper() != "ID")
                                                {
                                                    var lista = (SelectList)ViewData[Metadata.PropertyName.Replace("ID_", "").ToUpper()];
                                                    if (lista != null)
                                                    {
                                                        if (campo.Type == enumFieldType.Default)
                                                        {
                                                            if (campo.Active)
                                                            {
                                                                @Html.DropDownList(Metadata.PropertyName, lista, Valor as string, new { @class = "form-control" })
                                                            }
                                                            else
                                                            {
                                                                @Html.DropDownList(Metadata.PropertyName + "_visivel", lista, Valor as string, new { @class = "form-control", @disabled = "disabled" })
                                                                @Html.Hidden(Metadata.PropertyName, lista.SelectedValue.ToString())
                                                            }
                                                        }
                                                        else if (campo.Type == enumFieldType.CustomizedParcial)
                                                        {
                                                            @Html.Partial(campo.LoadControl)
                                                        }
                                                        else if (campo.Type == enumFieldType.CustomizedHtml)
                                                        {
                                                            @Html.Raw(campo.LoadControl)
                                                        }
                                                    }
                                                    else
                                                    {
                                                        if (campo.Type == enumFieldType.TextArea)
                                                        {
                                                            Valor = Valor ?? "";
                                                            @Html.TextArea(Metadata.PropertyName, Valor.ToString(), new { @class = "form-control", maxlength = "50", @readonly = "readonly" })
                                                        }
                                                        else if (campo.Type == enumFieldType.CustomizedParcial)
                                                        {
                                                            @Html.Partial(campo.LoadControl)
                                                        }
                                                        else if (campo.Type == enumFieldType.CustomizedHtml)
                                                        {
                                                            @Html.Raw(campo.LoadControl)
                                                        }
                                                        else if (campo.Type == enumFieldType.Default)
                                                        {
                                                            @Html.TextBox(Metadata.PropertyName, Valor, new { @class = "form-control", maxlength = "50", @readonly = "readonly" })
                                                        }
                                                    }
                                                }
                                                else if (Metadata.PropertyName.ToUpper() == "SENHA" || Metadata.PropertyName.ToUpper() == "PASSWORD")
                                                {
                                                    if (campo.Type == enumFieldType.Default)
                                                    {
                                                        @Html.Password(Metadata.PropertyName, "SENHA_PADRAO", new { @class = "form-control", maxlength = "50" })
                                                    }
                                                    else if (campo.Type == enumFieldType.CustomizedParcial)
                                                    {
                                                        @Html.Partial(campo.LoadControl)
                                                    }
                                                    else if (campo.Type == enumFieldType.CustomizedHtml)
                                                    {
                                                        @Html.Raw(campo.LoadControl)
                                                    }
                                                }
                                                else if (Metadata.ModelType == typeof(DateTime) || Metadata.ModelType == typeof(DateTime?))
                                                {
                                                    if (campo.Type == enumFieldType.Default)
                                                    {
                                                        if (campo.Active)
                                                        {
                                                            @Html.TextBox(Metadata.PropertyName, Valor, "{0:dd/MM/yyyy}", new { @class = "form-control data datepicker", maxlength = "10" })
                                                        }
                                                        else
                                                        {
                                                            @Html.TextBox(Metadata.PropertyName + "_visivel", Valor, "{0:dd/MM/yyyy}", new { @class = "form-control data datepicker", maxlength = "10", disabled = "disabled" })
                                                            @Html.Hidden(Metadata.PropertyName, Valor)
                                                        }
                                                    }
                                                    else if (campo.Type == enumFieldType.CustomizedParcial)
                                                    {
                                                        @Html.Partial(campo.LoadControl)
                                                    }
                                                    else if (campo.Type == enumFieldType.CustomizedHtml)
                                                    {
                                                        @Html.Raw(campo.LoadControl)
                                                    }
                                                }
                                                else
                                                {
                                                    var classes = new List<string> { "form-control" };
                                                    if (Metadata.PropertyName.ToLower().Contains("cpf")) { classes.Add("cpf"); }
                                                    if (Metadata.PropertyName.ToLower().Contains("cnpj")) { classes.Add("cnpj"); }
                                                    if (Metadata.PropertyName.ToLower().Contains("cep")) { classes.Add("cep"); }
                                                    if (Metadata.PropertyName.ToLower().Contains("telefone")) { classes.Add("telefone"); }
                                                    if (Metadata.PropertyName.ToLower().Contains("celular")) { classes.Add("telefone"); }
                                                    if (Metadata.ModelType == typeof(int) || Metadata.ModelType == typeof(int?)) { classes.Add("numero"); }
                                                    if (Metadata.ModelType == typeof(decimal) || Metadata.ModelType == typeof(decimal?)) { classes.Add("numero"); }
                                                    if (Metadata.ModelType == typeof(long) || Metadata.ModelType == typeof(long?)) { classes.Add("numero"); }

                                                    if (campo.Type == enumFieldType.TextArea)
                                                    {
                                                        Valor = Valor ?? "";
                                                        if (campo.Active)
                                                        {
                                                            @Html.TextArea(Metadata.PropertyName, Valor.ToString(), new { @class = string.Join(" ", classes), maxlength = "1000" })
                                                        }
                                                        else
                                                        {
                                                            @Html.TextArea(Metadata.PropertyName + "_visivel", Valor.ToString(), new { @class = string.Join(" ", classes), maxlength = "50", disabled = "disabled" })
                                                            @Html.Hidden(Metadata.PropertyName, Valor)
                                                        }
                                                    }
                                                    else if (campo.Type == enumFieldType.CustomizedParcial)
                                                    {
                                                        @Html.Partial(campo.LoadControl)
                                                    }
                                                    else if (campo.Type == enumFieldType.CustomizedHtml)
                                                    {
                                                        @Html.Raw(campo.LoadControl)
                                                    }
                                                    else if (campo.Type == enumFieldType.Default)
                                                    {
                                                        if (campo.Active)
                                                        {
                                                            @Html.TextBox(Metadata.PropertyName, Valor, new { @class = string.Join(" ", classes), maxlength = "50" })
                                                        }
                                                        else
                                                        {
                                                            @Html.TextBox(Metadata.PropertyName + "_visivel", Valor, new { @class = string.Join(" ", classes), maxlength = "50", disabled = "disabled" })
                                                            @Html.Hidden(Metadata.PropertyName, Valor)
                                                        }
                                                    }
                                                }
                                                @Html.ValidationMessage(Metadata.PropertyName, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    }

                                    @if (modelo.ConteudoDinamicoEditar.Count > 0)
                                    {
                                        <div class="col-xs-12 col-sm-4 col-md-4 col-lg-12 margintop10" id="divConteudoDinamicoFinal">

                                        </div>
                                    }
                                </div>
                            </div>
                        </div>

                        <div class="container-buttons clearfix">
                            <div class="row">
                                <div class="pull-right">
                                    <a href="@Url.Action("Index")" class="btn btn-default"><i class="fa fa-arrow-circle-o-left fa-fw"></i> Cancelar</a>
                                    @if (modelo.Fields.Count > 0)
                                    {
                                        <button type="submit" value="Create" class="btn btn-default btn-principal"><i class="fa fa-plus-circle fa-fw"></i> Salvar</button>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
}

@foreach (var campo in modelo.ConteudoDinamicoEditar)
{
    var nomeDiv = string.Format("divDinamica_{0}", idDiv);

    <div id="@nomeDiv" data-pai="@campo.ReferenceId" data-modo-conteudo="@Convert.ToInt32(campo.IncludedReference).ToString()">

        @if (campo.ContentType == enumDynamicContentType.CustomizedParcial)
        {
            if (!string.IsNullOrWhiteSpace(campo.Property))
            {
                var metadata = ModelMetadata.FromStringExpression(campo.Property as string, ViewData);
                var valor = metadata.Model;
                if (valor != null)
                {
                    @Html.Partial(campo.Content, valor)
                }
                else
                {
                    @Html.Partial(campo.Content)
                }
            }
            else
            {
                @Html.Partial(campo.Content)
            }
        }
        else if (campo.ContentType == enumDynamicContentType.CustomizedHtml)
        {
            @Html.Raw(campo.Content)
        }

    </div>
}