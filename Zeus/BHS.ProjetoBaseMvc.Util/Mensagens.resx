<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AtualizadoComSucesso" xml:space="preserve">
    <value>{0} atualizado com sucesso.</value>
  </data>
  <data name="CampoObrigatorio" xml:space="preserve">
    <value>Campo obrigatório.</value>
  </data>
  <data name="CepInvalido" xml:space="preserve">
    <value>O número do CEP deve ser informado com 8 dígitos.</value>
  </data>
  <data name="CepNaoEncontrado" xml:space="preserve">
    <value>O CEP informado não encontrou endereço válido.</value>
  </data>
  <data name="ConflitoAtividade" xml:space="preserve">
    <value>Esta atividade está em conflito de dia e horário com outro em seu calendário.</value>
  </data>
  <data name="CriadoComSucesso" xml:space="preserve">
    <value>{0} criado com sucesso.</value>
  </data>
  <data name="DesejaExcluir" xml:space="preserve">
    <value>Deseja excluir o {0} {1} ? Esta operação não poderá ser revertida.</value>
  </data>
  <data name="EditadaComSucesso" xml:space="preserve">
    <value>{0} alterado com sucesso.</value>
  </data>
  <data name="EmailInvalido" xml:space="preserve">
    <value>Conteúdo do campo e-mail deve ser composto por, no mínimo: nomeUsuario@provedor.com.</value>
  </data>
  <data name="EnviarEmail" xml:space="preserve">
    <value>Deseja enviar e-mail para todos os contatos selecionados? Esta ação não poderá ser revertida.</value>
  </data>
  <data name="ErroGerarRelatorio" xml:space="preserve">
    <value>Não é possível gerar o relatório a partir dos dados informados.</value>
  </data>
  <data name="ExcluidoComSucesso" xml:space="preserve">
    <value>{0} excluído com sucesso.</value>
  </data>
  <data name="FuncionarioInativo" xml:space="preserve">
    <value>FuncionarioInativo.</value>
  </data>
  <data name="LimiteInscritosAtividade" xml:space="preserve">
    <value>Esta atividade já possui o número máximo de inscritos.</value>
  </data>
  <data name="LoginInexistente" xml:space="preserve">
    <value>O login informado não existe.</value>
  </data>
  <data name="LoginSenhaIncorretos" xml:space="preserve">
    <value>Login ou senha incorretos.</value>
  </data>
  <data name="ModelStateInvalido" xml:space="preserve">
    <value>Alguns campos obrigatórios não foram preenchidos.</value>
  </data>
  <data name="NenhumRegistro" xml:space="preserve">
    <value>Nenhum registro encontrado para os dados informados.</value>
  </data>
  <data name="OperacaoRealizadaComSucesso" xml:space="preserve">
    <value>Operação realizada com sucesso.</value>
  </data>
  <data name="ProspectExistente" xml:space="preserve">
    <value>Prospect já existe. Os dados serão disponibilizados para atualização.</value>
  </data>
  <data name="ResolverFollowUps" xml:space="preserve">
    <value>Deseja resolver os Follow Ups selecionados?</value>
  </data>
  <data name="SenhaAtualNaoConfere" xml:space="preserve">
    <value>Senhas digitadas não conferem.</value>
  </data>
  <data name="SenhaDiferenteConfirmacaoDeSenha" xml:space="preserve">
    <value>Os valuees inseridos nos campos Senha e Confirmação de Senha não são iguais.</value>
  </data>
  <data name="SenhaIncorreta" xml:space="preserve">
    <value>Senha atual incorreta.</value>
  </data>
</root>