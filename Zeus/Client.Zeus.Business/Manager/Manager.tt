<#@ template language="C#" debug="false" hostspecific="true"#>
<#@ include file="EF.Utility.CS.ttinclude"#>
<#@ import namespace="System.Xml.XPath" #><#

const string inputFile = @"..\..\Client.Zeus.Data\DataRepository.edmx";
var textTransform = DynamicTextTransformation.Create(this);
var code = new CodeGenerationTools(this);
var ef = new MetadataTools(this);
var fileManager = EntityFrameworkTemplateFileManager.Create(this);

var loader = new MetadataLoader(this);
var itemCollection = loader.CreateEdmItemCollection(inputFile);

foreach (var entity in itemCollection.OfType<EntityType>().OrderBy(i => i.Name))
{
	var className = String.Join("", entity.Name.Replace("TB_", ""));	
	className = CodigoCustomizadoTT.GeraNomeClasse(className);

    fileManager.StartNewFile(className + "Manager.cs");
#>
//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace <#= code.VsNamespaceSuggestion() #>
{
	using System;
	using System.Collections.Generic;
	using System.Linq;
	using System.Linq.Expressions;
	using System.Text;
	using System.Threading.Tasks;
	using Client.Zeus.Data;
	using Client.Zeus.Data.Repository;
	using Client.Zeus.Domain;	 
	using Client.Zeus.Business.Base;

	public partial class <#= className #>Manager : BaseManager<<#=entity.Name#>>
	{
		public <#= className #>Manager()
			: base()
		{
		}

		public <#= className #>Manager(Context context)
			: base(context)
		{
		}

		public <#= className #>Manager(Adapter adapter)
			: base(adapter)
		{
		}		  

		public <#= className #>Repository Repository
		{
			get
			{
				return (<#= className #>Repository)base.BaseRepository;
			}
		}
	}
}
<#
}
fileManager.Process();

#>	 

<#+
public static class CodigoCustomizadoTT
{
	public static string SetaPrimeiraLetraMaiuscula(string valor, bool restoMinusculo = false)
    {
        string retorno = string.Empty;

        if (!string.IsNullOrWhiteSpace(valor))
        {
            retorno = valor.Substring(0, 1).ToUpper();

            if (restoMinusculo)
                retorno += valor.Substring(1).ToLower();
            else
                retorno += valor.Substring(1);
        }

        return retorno;
    }

    public static string EspacoEmBranco(int quantidade)
    {
        StringBuilder retorno = new StringBuilder();

        for (int i = 0; i < quantidade; i++)
        {
            retorno.Append(Environment.NewLine);
        }

        return retorno.ToString();
    }

    public static String GeraNomeClasse(string descricao)
    {
        descricao = descricao.Replace("TB_", "").Replace(".cs", "");

        string retorno = "";
        string[] aux = descricao.Split('_');

        int cont = 0;
        foreach (var item in aux)
        {
            if (item == "_")
                continue;

            retorno += SetaPrimeiraLetraMaiuscula(item, true);
            cont++;
        }

        retorno = AtualizaSiglas(retorno);
        return retorno;
    }

    public static string AtualizaSiglas(string retorno)
    {
        string aux = retorno.Replace("Uf", "UF");

        aux = aux.Replace("Cep", "CEP");
        aux = aux.Replace("Cnpj", "CNPJ");
        aux = aux.Replace("Cpf", "CPF");

        return aux;
    }
}

#>

